"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/tools/connectors.ts":
/*!*********************************!*\
  !*** ./lib/tools/connectors.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getGoogleConnectors: () => (/* binding */ getGoogleConnectors)\n/* harmony export */ });\nasync function getGoogleConnectors() {\n    const connectors = [];\n    try {\n        const statusResponse = await fetch(\"/api/google/status\");\n        const { connected } = await statusResponse.json();\n        if (!connected) {\n            return connectors;\n        }\n        // Add Google Calendar MCP connector\n        connectors.push({\n            type: \"mcp\",\n            server_label: \"google_calendar\",\n            server_url: \"google_calendar\",\n            require_approval: \"never\",\n            allowed_tools: [\n                \"*\"\n            ]\n        });\n        // Add Gmail MCP connector  \n        connectors.push({\n            type: \"mcp\",\n            server_label: \"gmail\",\n            server_url: \"gmail\",\n            require_approval: \"never\",\n            allowed_tools: [\n                \"*\"\n            ]\n        });\n    } catch (error) {\n        console.error(\"Error getting Google connectors:\", error);\n    }\n    return connectors;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi90b29scy9jb25uZWN0b3JzLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxlQUFlQTtJQUNwQixNQUFNQyxhQUFhLEVBQUU7SUFFckIsSUFBSTtRQUNGLE1BQU1DLGlCQUFpQixNQUFNQyxNQUFNO1FBQ25DLE1BQU0sRUFBRUMsU0FBUyxFQUFFLEdBQUcsTUFBTUYsZUFBZUcsSUFBSTtRQUUvQyxJQUFJLENBQUNELFdBQVc7WUFDZCxPQUFPSDtRQUNUO1FBRUEsb0NBQW9DO1FBQ3BDQSxXQUFXSyxJQUFJLENBQUM7WUFDZEMsTUFBTTtZQUNOQyxjQUFjO1lBQ2RDLFlBQVk7WUFDWkMsa0JBQWtCO1lBQ2xCQyxlQUFlO2dCQUFDO2FBQUk7UUFDdEI7UUFFQSw0QkFBNEI7UUFDNUJWLFdBQVdLLElBQUksQ0FBQztZQUNkQyxNQUFNO1lBQ05DLGNBQWM7WUFDZEMsWUFBWTtZQUNaQyxrQkFBa0I7WUFDbEJDLGVBQWU7Z0JBQUM7YUFBSTtRQUN0QjtJQUNGLEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsb0NBQW9DQTtJQUNwRDtJQUVBLE9BQU9YO0FBQ1QiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2UvbGliL3Rvb2xzL2Nvbm5lY3RvcnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEdvb2dsZUNvbm5lY3RvcnMoKSB7XG4gIGNvbnN0IGNvbm5lY3RvcnMgPSBbXTtcbiAgXG4gIHRyeSB7XG4gICAgY29uc3Qgc3RhdHVzUmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcIi9hcGkvZ29vZ2xlL3N0YXR1c1wiKTtcbiAgICBjb25zdCB7IGNvbm5lY3RlZCB9ID0gYXdhaXQgc3RhdHVzUmVzcG9uc2UuanNvbigpO1xuICAgIFxuICAgIGlmICghY29ubmVjdGVkKSB7XG4gICAgICByZXR1cm4gY29ubmVjdG9ycztcbiAgICB9XG5cbiAgICAvLyBBZGQgR29vZ2xlIENhbGVuZGFyIE1DUCBjb25uZWN0b3JcbiAgICBjb25uZWN0b3JzLnB1c2goe1xuICAgICAgdHlwZTogXCJtY3BcIixcbiAgICAgIHNlcnZlcl9sYWJlbDogXCJnb29nbGVfY2FsZW5kYXJcIixcbiAgICAgIHNlcnZlcl91cmw6IFwiZ29vZ2xlX2NhbGVuZGFyXCIsXG4gICAgICByZXF1aXJlX2FwcHJvdmFsOiBcIm5ldmVyXCIsXG4gICAgICBhbGxvd2VkX3Rvb2xzOiBbXCIqXCJdXG4gICAgfSk7XG5cbiAgICAvLyBBZGQgR21haWwgTUNQIGNvbm5lY3RvciAgXG4gICAgY29ubmVjdG9ycy5wdXNoKHtcbiAgICAgIHR5cGU6IFwibWNwXCIsXG4gICAgICBzZXJ2ZXJfbGFiZWw6IFwiZ21haWxcIixcbiAgICAgIHNlcnZlcl91cmw6IFwiZ21haWxcIixcbiAgICAgIHJlcXVpcmVfYXBwcm92YWw6IFwibmV2ZXJcIixcbiAgICAgIGFsbG93ZWRfdG9vbHM6IFtcIipcIl1cbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZ2V0dGluZyBHb29nbGUgY29ubmVjdG9yczpcIiwgZXJyb3IpO1xuICB9XG5cbiAgcmV0dXJuIGNvbm5lY3RvcnM7XG59XG4iXSwibmFtZXMiOlsiZ2V0R29vZ2xlQ29ubmVjdG9ycyIsImNvbm5lY3RvcnMiLCJzdGF0dXNSZXNwb25zZSIsImZldGNoIiwiY29ubmVjdGVkIiwianNvbiIsInB1c2giLCJ0eXBlIiwic2VydmVyX2xhYmVsIiwic2VydmVyX3VybCIsInJlcXVpcmVfYXBwcm92YWwiLCJhbGxvd2VkX3Rvb2xzIiwiZXJyb3IiLCJjb25zb2xlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/tools/connectors.ts\n"));

/***/ })

});